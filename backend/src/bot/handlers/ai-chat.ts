import { Context } from 'telegraf';
import { AIService } from '../../lib/ai/ai-service';
import { AIConversation, AIScenario } from '../../lib/ai/types';

export class AIChatHandler {
  private aiService: AIService;

  constructor() {
    this.aiService = new AIService();
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ai
  async handleAICommand(ctx: Context, organizationId: number): Promise<void> {
    try {
      await ctx.reply(
        'ü§ñ AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n' +
        '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å:\n' +
        '‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —É—Å–ª—É–≥–∞—Ö\n' +
        '‚Ä¢ –ü–æ–º–æ—â—å—é —Å –∑–∞–ø–∏—Å—å—é\n' +
        '‚Ä¢ –û—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã\n' +
        '‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–æ–π\n\n' +
        '–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å!'
      );
    } catch (error) {
      console.error('Error in AI command handler:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.');
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ AI —Å–æ–æ–±—â–µ–Ω–∏–π
  async handleAIMessage(ctx: Context, organizationId: number, messageText: string): Promise<void> {
    try {
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
      const scenario = this.determineScenario(messageText, ctx);
      
      // –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä
      const conversation: AIConversation = {
        messages: [
          {
            role: 'user',
            content: messageText
          }
        ]
      };

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ AI (–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ sendMessage)
      const response = await this.aiService.sendMessage(
        organizationId,
        conversation,
        scenario
      );

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await ctx.reply(response.content);

    } catch (error) {
      console.error('Error in AI message handler:', error);
      
      // Fallback –æ—Ç–≤–µ—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
      if (error instanceof Error) {
        if (error.message.includes('not configured') || error.message.includes('not enabled')) {
          await ctx.reply(
            'ü§ñ AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.\n\n' +
            '–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start'
          );
        } else {
          await ctx.reply(
            '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\n' +
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –∑–∞–ø–∏—Å–∏.'
          );
        }
      } else {
        await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      }
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  private determineScenario(messageText: string, ctx: Context): AIScenario | undefined {
    const text = messageText.toLowerCase();

    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    if (this.isGreeting(text)) {
      return 'greeting';
    }

    // –ü–æ–º–æ—â—å —Å –∑–∞–ø–∏—Å—å—é
    if (this.isBookingRelated(text)) {
      return 'booking_help';
    }

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–∞—Ö
    if (this.isServiceInfoRequest(text)) {
      return 'service_info';
    }

    // –ü–æ–¥–¥–µ—Ä–∂–∫–∞
    if (this.isSupportRequest(text)) {
      return 'support';
    }

    // –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    return 'general';
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
  private isGreeting(text: string): boolean {
    const greetings = [
      '–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ', '–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å', 'hi', 'hello',
      '–¥–æ–±—Ä—ã–π –¥–µ–Ω—å', '–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä', '–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ', '–∫–∞–∫ –¥–µ–ª–∞'
    ];
    return greetings.some(greeting => text.includes(greeting));
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∑–∞–ø–∏—Å—å—é
  private isBookingRelated(text: string): boolean {
    const bookingKeywords = [
      '–∑–∞–ø–∏—Å–∞—Ç—å—Å—è', '–∑–∞–ø–∏—Å—å', '–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å', '–±—Ä–æ–Ω—å', '–≤—Ä–µ–º—è',
      '—Å–≤–æ–±–æ–¥–Ω–æ', '–¥–æ—Å—Ç—É–ø–Ω–æ', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–∫–∞–ª–µ–Ω–¥–∞—Ä—å', 'appointment',
      '–∫–æ–≥–¥–∞ –º–æ–∂–Ω–æ', '–µ—Å—Ç—å –ª–∏ –≤—Ä–µ–º—è', '—Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã', '–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã',
      '–∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞', '—Ö–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è', '–º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è', '–µ—Å—Ç—å –º–µ—Å—Ç–∞',
      '—Å–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞', '–¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Å—Ç–∞', '–∫–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ', '–≤–æ —Å–∫–æ–ª—å–∫–æ'
    ];
    return bookingKeywords.some(keyword => text.includes(keyword));
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—Å–ª—É–≥–∞—Ö
  private isServiceInfoRequest(text: string): boolean {
    const serviceKeywords = [
      '—É—Å–ª—É–≥–∞', '—É—Å–ª—É–≥–∏', '—á—Ç–æ –¥–µ–ª–∞–µ—Ç–µ', '—á—Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç–µ',
      '–º–∞–Ω–∏–∫—é—Ä', '–ø–µ–¥–∏–∫—é—Ä', '—Å—Ç—Ä–∏–∂–∫–∞', '–º–∞—Å—Å–∞–∂', '—Ü–µ–Ω–∞', '—Å—Ç–æ–∏–º–æ—Å—Ç—å',
      '—Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç', '–æ–ø–∏—Å–∞–Ω–∏–µ', '—á—Ç–æ –≤—Ö–æ–¥–∏—Ç', '—á—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç',
      '–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '—Å–∫–æ–ª—å–∫–æ –¥–ª–∏—Ç—Å—è', '–∫–∞–∫–∏–µ —É—Å–ª—É–≥–∏', '—á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å',
      '–ø—Ä–∞–π—Å', '–ø—Ä–∞–π—Å-–ª–∏—Å—Ç', '—Ü–µ–Ω—ã', '—Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥'
    ];
    return serviceKeywords.some(keyword => text.includes(keyword));
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏
  private isSupportRequest(text: string): boolean {
    const supportKeywords = [
      '–ø—Ä–æ–±–ª–µ–º–∞', '–æ—à–∏–±–∫–∞', '–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç', '–ø–æ–º–æ—â—å', '–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      '–∫–æ–Ω—Ç–∞–∫—Ç—ã', '—Ç–µ–ª–µ—Ñ–æ–Ω', '–∞–¥—Ä–µ—Å', '–∫–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è', '–∂–∞–ª–æ–±–∞',
      '–æ—Ç–º–µ–Ω–∏—Ç—å', '–æ—Ç–º–µ–Ω–∞', '–ø–µ—Ä–µ–Ω–µ—Å—Ç–∏', '–ø–µ—Ä–µ–Ω–æ—Å', '–∏–∑–º–µ–Ω–∏—Ç—å',
      '–Ω–µ –º–æ–≥—É', '–Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è', '—á—Ç–æ –¥–µ–ª–∞—Ç—å', '–∫–∞–∫ –±—ã—Ç—å',
      '—Å—Ç–∞—Ç—É—Å –∑–∞–ø–∏—Å–∏', '–º–æ—è –∑–∞–ø–∏—Å—å', '–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–ø–∏—Å—å',
      '–ø–æ–∑–≤–æ–Ω–∏—Ç—å', '—Å–≤—è–∑–∞—Ç—å—Å—è', '–ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –∫–µ–º-—Ç–æ', '—Å –∫–µ–º –º–æ–∂–Ω–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å',
      '–º–µ–Ω–µ–¥–∂–µ—Ä', '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', '–¥–∏—Ä–µ–∫—Ç–æ—Ä', '—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å',
      '–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', 'email', '–ø–æ—á—Ç–∞', '—Å–≤—è–∑–∞—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é'
    ];
    return supportKeywords.some(keyword => text.includes(keyword));
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ª–∏ AI –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
  async isAIActivated(organizationId: number): Promise<boolean> {
    try {
      const config = await this.aiService.getOrganizationAIConfig(organizationId);
      return config?.enabled || false;
    } catch (error) {
      console.error('Error checking AI activation:', error);
      return false;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI
  async getUsageStats(organizationId: number, days: number = 7): Promise<any> {
    try {
      return await this.aiService.getUsageStats(organizationId, days);
    } catch (error) {
      console.error('Error getting AI usage stats:', error);
      return null;
    }
  }
}

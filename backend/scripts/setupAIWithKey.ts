import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function setupAIWithKey() {
  try {
    console.log('üöÄ –ë–´–°–¢–†–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê AI –ê–°–°–ò–°–¢–ï–ù–¢–ê');
    console.log('=' .repeat(50));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ API –∫–ª—é—á –ø–µ—Ä–µ–¥–∞–Ω
    const apiKey = process.env.OPENAI_API_KEY;
    if (!apiKey) {
      console.log('‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω OPENAI_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      console.log('üìù –ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å API –∫–ª—é—á–æ–º:');
      console.log('   OPENAI_API_KEY=sk-your-key-here npx tsx scripts/setupAIWithKey.ts');
      console.log('   –∏–ª–∏');
      console.log('   export OPENAI_API_KEY=sk-your-key-here');
      console.log('   npx tsx scripts/setupAIWithKey.ts');
      return;
    }

    console.log('‚úÖ OpenAI API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω:', apiKey.substring(0, 10) + '...');

    // 1. –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é
    console.log('\nüìã –®–ê–ì 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏');
    console.log('-'.repeat(30));
    
    let testOrg = await prisma.organization.findFirst({
      where: { name: 'Complete AI Test Organization' }
    });

    if (!testOrg) {
      console.log('‚ùå –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ testCompleteAIAssistant.ts');
      return;
    }

    console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:', testOrg.name);

    // 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    console.log('\nüìã –®–ê–ì 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
    console.log('-'.repeat(30));
    
    const aiConfig = await prisma.organizationAIConfig.upsert({
      where: { organizationId: testOrg.id },
      update: {
        provider: 'openai',
        apiKey: apiKey,
        model: 'gpt-4o-mini',
        maxTokens: 2000,
        temperature: 0.7,
        systemPrompt: '–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–ª–∏–Ω–∏–∫–∏ –∫—Ä–∞—Å–æ—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–æ—Ç–∞—Ö, –∑–∞–ø–∏—Å—è—Ö, —É—Å–ª—É–≥–∞—Ö –∏ —Ü–µ–Ω–∞—Ö. –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–µ–º-—Ç–æ.',
        customPrompts: JSON.stringify({
          greeting: '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–ª–∏–Ω–∏–∫—É –∫—Ä–∞—Å–æ—Ç—ã! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ —É—Å–ª—É–≥–∏, —Ä–∞—Å—Å–∫–∞–∂—É –æ —Ü–µ–Ω–∞—Ö –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.',
          bookingHelp: '–ü–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —É—Å–ª—É–≥—É –∏ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏. –£ –Ω–∞—Å –µ—Å—Ç—å –º–∞–Ω–∏–∫—é—Ä, –ø–µ–¥–∏–∫—é—Ä, –º–∞—Å—Å–∞–∂ —Ä—É–∫ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —É—Å–ª—É–≥–∏. –ü–æ–∫–∞–∂—É –±–ª–∏–∂–∞–π—à–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã.',
          serviceInfo: '–†–∞—Å—Å–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–æ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö, –∏—Ö –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö. –£ –Ω–∞—Å –µ—Å—Ç—å –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏, —Ç–∞–∫ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.',
          support: '–î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é. –ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –∏ email –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π. –ú–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º.',
          general: '–û—Ç–≤–µ—á—É –Ω–∞ –ª—é–±—ã–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö, —Ü–µ–Ω–∞—Ö, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –∏–ª–∏ –∑–∞–ø–∏—Å–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.'
        }),
        enabled: true
      },
      create: {
        organizationId: testOrg.id,
        provider: 'openai',
        apiKey: apiKey,
        model: 'gpt-4o-mini',
        maxTokens: 2000,
        temperature: 0.7,
        systemPrompt: '–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–ª–∏–Ω–∏–∫–∏ –∫—Ä–∞—Å–æ—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–æ—Ç–∞—Ö, –∑–∞–ø–∏—Å—è—Ö, —É—Å–ª—É–≥–∞—Ö –∏ —Ü–µ–Ω–∞—Ö. –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–µ–º-—Ç–æ.',
        customPrompts: JSON.stringify({
          greeting: '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–ª–∏–Ω–∏–∫—É –∫—Ä–∞—Å–æ—Ç—ã! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ —É—Å–ª—É–≥–∏, —Ä–∞—Å—Å–∫–∞–∂—É –æ —Ü–µ–Ω–∞—Ö –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.',
          bookingHelp: '–ü–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —É—Å–ª—É–≥—É –∏ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏. –£ –Ω–∞—Å –µ—Å—Ç—å –º–∞–Ω–∏–∫—é—Ä, –ø–µ–¥–∏–∫—é—Ä, –º–∞—Å—Å–∞–∂ —Ä—É–∫ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —É—Å–ª—É–≥–∏. –ü–æ–∫–∞–∂—É –±–ª–∏–∂–∞–π—à–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã.',
          serviceInfo: '–†–∞—Å—Å–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–æ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö, –∏—Ö –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö. –£ –Ω–∞—Å –µ—Å—Ç—å –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏, —Ç–∞–∫ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.',
          support: '–î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é. –ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –∏ email –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π. –ú–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º.',
          general: '–û—Ç–≤–µ—á—É –Ω–∞ –ª—é–±—ã–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö, —Ü–µ–Ω–∞—Ö, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –∏–ª–∏ –∑–∞–ø–∏—Å–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.'
        }),
        enabled: true
      }
    });

    console.log('‚úÖ AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Å –≤–∞—à–∏–º API –∫–ª—é—á–æ–º');
    console.log('   - Provider: OpenAI');
    console.log('   - Model: gpt-4o-mini');
    console.log('   - Max Tokens: 2000');
    console.log('   - Temperature: 0.7');
    console.log('   - Enabled: true');

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
    console.log('\nüìã –®–ê–ì 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏');
    console.log('-'.repeat(30));
    
    const orgData = {
      name: testOrg.name,
      description: testOrg.description,
      phone: testOrg.phone,
      email: testOrg.email,
      address: testOrg.address,
      workingHours: testOrg.workingHours
    };

    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:');
    Object.entries(orgData).forEach(([key, value]) => {
      const status = value ? '‚úÖ' : '‚ùå';
      console.log(`   ${status} ${key}: ${value || '–ù–ï –ó–ê–ü–û–õ–ù–ï–ù–û'}`);
    });

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª—É–≥–∏
    const services = await prisma.service.findMany({
      where: { organizationId: testOrg.id }
    });

    console.log(`\n‚úÖ –£—Å–ª—É–≥–∏ (${services.length}):`);
    services.forEach(service => {
      const price = service.price ? `${service.price} ${service.currency || 'RUB'}` : '–ë–µ–∑ —Ü–µ–Ω—ã';
      console.log(`   - ${service.nameRu || service.name}: ${price} (${service.durationMin} –º–∏–Ω)`);
    });

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ—Ç—ã
    const slots = await prisma.slot.findMany({
      where: { 
        service: { organizationId: testOrg.id },
        startAt: { gte: new Date() }
      }
    });

    console.log(`\n‚úÖ –°–ª–æ—Ç—ã (${slots.length}):`);
    console.log(`   - –í—Å–µ–≥–æ –±—É–¥—É—â–∏—Ö —Å–ª–æ—Ç–æ–≤: ${slots.length}`);

    // 6. –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    console.log('\nüéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!');
    console.log('=' .repeat(50));
    console.log('‚úÖ AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
    console.log('\nüìã –ß—Ç–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:');
    console.log('   - OpenAI API –∫–ª—é—á –ø–æ–¥–∫–ª—é—á–µ–Ω');
    console.log('   - AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞');
    console.log('   - –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    console.log('   - AI –≤–∫–ª—é—á–µ–Ω –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏');
    
    console.log('\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: http://localhost:4201');
    console.log('   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ AI Assistant');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
    console.log('   4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ Telegram –±–æ—Ç–µ');
    
    console.log('\nüì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±–æ—Ç–µ:');
    console.log('   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /ai');
    console.log('   - –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å: "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫–∏–µ —É—Å–ª—É–≥–∏ —É –≤–∞—Å –µ—Å—Ç—å?"');
    console.log('   - AI –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ AI:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
setupAIWithKey();

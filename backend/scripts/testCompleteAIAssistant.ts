import { PrismaClient } from '@prisma/client';
import { AIService } from '../src/lib/ai/ai-service';
import { AIChatHandler } from '../src/bot/handlers/ai-chat';

const prisma = new PrismaClient();
const aiService = new AIService();

async function testCompleteAIAssistant() {
  try {
    console.log('üöÄ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï AI –ê–°–°–ò–°–¢–ï–ù–¢–ê - –í–°–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò');
    console.log('=' .repeat(70));

    // 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —Ç–µ—Å—Ç–æ–≤—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é
    console.log('\nüìã –®–ê–ì 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏');
    console.log('-'.repeat(50));
    
    let testOrg = await prisma.organization.findFirst({
      where: { name: 'Complete AI Test Organization' }
    });

    if (!testOrg) {
      testOrg = await prisma.organization.create({
        data: {
          name: 'Complete AI Test Organization',
          description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ –∫—Ä–∞—Å–æ—Ç—ã —Å –ø–æ–ª–Ω—ã–º —Å–ø–µ–∫—Ç—Ä–æ–º —É—Å–ª—É–≥, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏ AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º',
          address: '—É–ª. –ü–æ–ª–Ω–∞—è, 456, –ú–æ—Å–∫–≤–∞, –º. –¢–µ—Å—Ç–æ–≤–∞—è',
          workingHours: '–ü–Ω-–ü—Ç: 9:00-21:00, –°–±-–í—Å: 10:00-18:00',
          phone: '+7 (495) 987-65-43',
          email: 'info@complete-ai-test.ru'
        }
      });
    }

    console.log('‚úÖ –ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:');
    console.log('   - –ù–∞–∑–≤–∞–Ω–∏–µ:', testOrg.name);
    console.log('   - –û–ø–∏—Å–∞–Ω–∏–µ:', testOrg.description);
    console.log('   - –¢–µ–ª–µ—Ñ–æ–Ω:', testOrg.phone);
    console.log('   - Email:', testOrg.email);
    console.log('   - –ê–¥—Ä–µ—Å:', testOrg.address);
    console.log('   - –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:', testOrg.workingHours);

    // 2. –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —É—Å–ª—É–≥–∏ —Å —Ü–µ–Ω–∞–º–∏
    console.log('\nüìã –®–ê–ì 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö —É—Å–ª—É–≥ —Å —Ü–µ–Ω–∞–º–∏');
    console.log('-'.repeat(50));
    
    let services = await prisma.service.findMany({
      where: { organizationId: testOrg.id }
    });

    if (services.length === 0) {
      services = await Promise.all([
        prisma.service.create({
          data: {
            name: '–ú–∞–Ω–∏–∫—é—Ä –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
            nameRu: '–ú–∞–Ω–∏–∫—é—Ä –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
            description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞–Ω–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –≥–µ–ª—å-–ª–∞–∫–æ–º',
            descriptionRu: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞–Ω–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –≥–µ–ª—å-–ª–∞–∫–æ–º. –í–∫–ª—é—á–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –∫—É—Ç–∏–∫—É–ª—ã, –ø—Ä–∏–¥–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã –Ω–æ–≥—Ç—è–º, –ø–æ–∫—Ä—ã—Ç–∏–µ –≥–µ–ª—å-–ª–∞–∫–æ–º –∏ —É—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π —Ä—É–∫.',
            durationMin: 60,
            price: 2000,
            currency: 'RUB',
            organizationId: testOrg.id
          }
        }),
        prisma.service.create({
          data: {
            name: '–ü–µ–¥–∏–∫—é—Ä –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
            nameRu: '–ü–µ–¥–∏–∫—é—Ä –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
            description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º',
            descriptionRu: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –≥–µ–ª—å-–ª–∞–∫–æ–º. –í–∫–ª—é—á–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É —Å—Ç–æ–ø, —É–¥–∞–ª–µ–Ω–∏–µ –º–æ–∑–æ–ª–µ–π, –ø–æ–∫—Ä—ã—Ç–∏–µ –≥–µ–ª—å-–ª–∞–∫–æ–º –∏ –º–∞—Å—Å–∞–∂ –Ω–æ–≥.',
            durationMin: 90,
            price: 2500,
            currency: 'RUB',
            organizationId: testOrg.id
          }
        }),
        prisma.service.create({
          data: {
            name: '–ú–∞—Å—Å–∞–∂ —Ä—É–∫',
            nameRu: '–ú–∞—Å—Å–∞–∂ —Ä—É–∫',
            description: '–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –º–∞—Å—Å–∞–∂ —Ä—É–∫',
            descriptionRu: '–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –º–∞—Å—Å–∞–∂ —Ä—É–∫ —Å –∞—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –º–∞—Å–ª–∞–º–∏. –ü–æ–º–æ–≥–∞–µ—Ç —Å–Ω—è—Ç—å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –∏ —É–ª—É—á—à–∏—Ç—å –∫—Ä–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–∏–µ.',
            durationMin: 30,
            price: 1500,
            currency: 'RUB',
            organizationId: testOrg.id
          }
        }),
        prisma.service.create({
          data: {
            name: '–ú–∞–Ω–∏–∫—é—Ä + –ü–µ–¥–∏–∫—é—Ä',
            nameRu: '–ú–∞–Ω–∏–∫—é—Ä + –ü–µ–¥–∏–∫—é—Ä',
            description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —É—Å–ª—É–≥–∞ –º–∞–Ω–∏–∫—é—Ä + –ø–µ–¥–∏–∫—é—Ä',
            descriptionRu: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —É—Å–ª—É–≥–∞ –º–∞–Ω–∏–∫—é—Ä + –ø–µ–¥–∏–∫—é—Ä —Å–æ —Å–∫–∏–¥–∫–æ–π. –í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –æ–±–µ–∏—Ö —É—Å–ª—É–≥.',
            durationMin: 120,
            price: 4000,
            currency: 'RUB',
            organizationId: testOrg.id
          }
        })
      ]);
    }

    console.log('‚úÖ –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —É—Å–ª—É–≥–∏ —Å —Ü–µ–Ω–∞–º–∏ —Å–æ–∑–¥–∞–Ω—ã:');
    services.forEach(service => {
      console.log(`   - ${service.nameRu || service.name}: ${service.price} ${service.currency} (${service.durationMin} –º–∏–Ω)`);
    });

    // 3. –°–æ–∑–¥–∞–µ–º —Å–ª–æ—Ç—ã –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä–µ–¥
    console.log('\nüìã –®–ê–ì 3: –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ—Ç–æ–≤ –Ω–∞ –Ω–µ–¥–µ–ª—é');
    console.log('-'.repeat(50));
    
    const now = new Date();
    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
    
    const slots = [];
    for (let day = 0; day < 7; day++) {
      const currentDay = new Date(today);
      currentDay.setDate(currentDay.getDate() + day);
      
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (–¥–µ–Ω—å 0)
      if (currentDay.getDay() === 0) continue;
      
      // –°–æ–∑–¥–∞–µ–º —Å–ª–æ—Ç—ã —Å 10:00 –¥–æ 18:00 —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 2 —á–∞—Å–∞
      for (let hour = 10; hour < 18; hour += 2) {
        for (const service of services) {
          const startTime = new Date(currentDay);
          startTime.setHours(hour, 0, 0, 0);
          
          const endTime = new Date(startTime);
          endTime.setMinutes(endTime.getMinutes() + service.durationMin);
          
          const slot = await prisma.slot.create({
            data: {
              serviceId: service.id,
              startAt: startTime,
              endAt: endTime,
              capacity: 1
            }
          });
          
          slots.push(slot);
        }
      }
    }

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ —Å–ª–æ—Ç–æ–≤: ${slots.length}`);

    // 4. –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏
    console.log('\nüìã –®–ê–ì 4: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏');
    console.log('-'.repeat(50));
    
    const appointments = [];
    const statuses = ['confirmed', 'pending', 'confirmed', 'pending', 'confirmed'];
    
    // –ë–µ—Ä–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–æ—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏
    const slotsToBook = slots.slice(0, 5);
    
    for (let i = 0; i < slotsToBook.length; i++) {
      const slot = slotsToBook[i];
      
      const appointment = await prisma.appointment.create({
        data: {
          chatId: `test_chat_${i + 1}`,
          serviceId: slot.serviceId,
          slotId: slot.id,
          status: statuses[i]
        }
      });
      
      appointments.push(appointment);
    }

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${appointments.length}`);
    console.log('   –°—Ç–∞—Ç—É—Å—ã –∑–∞–ø–∏—Å–µ–π:', appointments.map(a => a.status).join(', '));

    // 5. –°–æ–∑–¥–∞–µ–º AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –ø–æ–ª–Ω—ã–º–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø—Ä–æ–º–ø—Ç–∞–º–∏
    console.log('\nüìã –®–ê–ì 5: –°–æ–∑–¥–∞–Ω–∏–µ AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø—Ä–æ–º–ø—Ç–∞–º–∏');
    console.log('-'.repeat(50));
    
    const aiConfig = await prisma.organizationAIConfig.upsert({
      where: { organizationId: testOrg.id },
      update: {
        provider: 'openai',
        apiKey: 'test-api-key',
        model: 'gpt-4o-mini',
        maxTokens: 2000,
        temperature: 0.7,
        systemPrompt: '–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–ª–∏–Ω–∏–∫–∏ –∫—Ä–∞—Å–æ—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–æ—Ç–∞—Ö, –∑–∞–ø–∏—Å—è—Ö, —É—Å–ª—É–≥–∞—Ö –∏ —Ü–µ–Ω–∞—Ö. –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–µ–º-—Ç–æ.',
        customPrompts: JSON.stringify({
          greeting: '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–ª–∏–Ω–∏–∫—É –∫—Ä–∞—Å–æ—Ç—ã! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ —É—Å–ª—É–≥–∏, —Ä–∞—Å—Å–∫–∞–∂—É –æ —Ü–µ–Ω–∞—Ö –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.',
          bookingHelp: '–ü–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —É—Å–ª—É–≥—É –∏ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏. –£ –Ω–∞—Å –µ—Å—Ç—å –º–∞–Ω–∏–∫—é—Ä, –ø–µ–¥–∏–∫—é—Ä, –º–∞—Å—Å–∞–∂ —Ä—É–∫ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —É—Å–ª—É–≥–∏. –ü–æ–∫–∞–∂—É –±–ª–∏–∂–∞–π—à–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã.',
          serviceInfo: '–†–∞—Å—Å–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–æ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö, –∏—Ö –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö. –£ –Ω–∞—Å –µ—Å—Ç—å –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏, —Ç–∞–∫ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.',
          support: '–î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é. –ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –∏ email –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π. –ú–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º.',
          general: '–û—Ç–≤–µ—á—É –Ω–∞ –ª—é–±—ã–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö, —Ü–µ–Ω–∞—Ö, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –∏–ª–∏ –∑–∞–ø–∏—Å–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.'
        }),
        enabled: true
      },
      create: {
        organizationId: testOrg.id,
        provider: 'openai',
        apiKey: 'test-api-key',
        model: 'gpt-4o-mini',
        maxTokens: 2000,
        temperature: 0.7,
        systemPrompt: '–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–ª–∏–Ω–∏–∫–∏ –∫—Ä–∞—Å–æ—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–æ—Ç–∞—Ö, –∑–∞–ø–∏—Å—è—Ö, —É—Å–ª—É–≥–∞—Ö –∏ —Ü–µ–Ω–∞—Ö. –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–µ–º-—Ç–æ.',
        customPrompts: JSON.stringify({
          greeting: '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–ª–∏–Ω–∏–∫—É –∫—Ä–∞—Å–æ—Ç—ã! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ —É—Å–ª—É–≥–∏, —Ä–∞—Å—Å–∫–∞–∂—É –æ —Ü–µ–Ω–∞—Ö –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.',
          bookingHelp: '–ü–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —É—Å–ª—É–≥—É –∏ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏. –£ –Ω–∞—Å –µ—Å—Ç—å –º–∞–Ω–∏–∫—é—Ä, –ø–µ–¥–∏–∫—é—Ä, –º–∞—Å—Å–∞–∂ —Ä—É–∫ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —É—Å–ª—É–≥–∏. –ü–æ–∫–∞–∂—É –±–ª–∏–∂–∞–π—à–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã.',
          serviceInfo: '–†–∞—Å—Å–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–æ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö, –∏—Ö –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö. –£ –Ω–∞—Å –µ—Å—Ç—å –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏, —Ç–∞–∫ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.',
          support: '–î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é. –ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –∏ email –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π. –ú–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º.',
          general: '–û—Ç–≤–µ—á—É –Ω–∞ –ª—é–±—ã–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö, —Ü–µ–Ω–∞—Ö, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –∏–ª–∏ –∑–∞–ø–∏—Å–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.'
        }),
        enabled: true
      }
    });

    console.log('‚úÖ AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —Å –ø–æ–ª–Ω—ã–º–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø—Ä–æ–º–ø—Ç–∞–º–∏');

    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç AI
    console.log('\nüìã –®–ê–ì 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ AI');
    console.log('-'.repeat(50));
    
    const aiHandler = new AIChatHandler();
    const getOrganizationContext = (aiService as any).getOrganizationContext.bind(aiService);
    const context = await getOrganizationContext(testOrg.id);
    
    console.log('‚úÖ –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç AI –ø–æ–ª—É—á–µ–Ω:');
    console.log('   - –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:', context.organizationName);
    console.log('   - –û–ø–∏—Å–∞–Ω–∏–µ:', context.description);
    console.log('   - –¢–µ–ª–µ—Ñ–æ–Ω:', context.phone);
    console.log('   - Email:', context.email);
    console.log('   - –ê–¥—Ä–µ—Å:', context.address);
    console.log('   - –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:', context.workingHours);
    console.log('   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥:', context.services.length);
    console.log('   - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤:', context.services.reduce((sum: number, s: any) => sum + s.totalSlots, 0));
    console.log('   - –î–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤:', context.services.reduce((sum: number, s: any) => sum + s.availableSlots, 0));
    console.log('   - –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤:', context.services.reduce((sum: number, s: any) => sum + s.bookedSlots, 0));
    console.log('   - –ó–∞–ø–∏—Å–µ–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:', context.appointmentStats.todayCount);
    console.log('   - –ó–∞–ø–∏—Å–µ–π –Ω–∞ –∑–∞–≤—Ç—Ä–∞:', context.appointmentStats.tomorrowCount);
    console.log('   - –í—Å–µ–≥–æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö:', context.appointmentStats.totalUpcoming);

    // 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ AI
    console.log('\nüìã –®–ê–ì 7: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ AI');
    console.log('-'.repeat(50));
    
    const allTestScenarios = [
      // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
      { message: '–ü—Ä–∏–≤–µ—Ç!', scenario: 'greeting', description: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' },
      { message: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!', scenario: 'greeting', description: '–§–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' },
      
      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–∞—Ö
      { message: '–ö–∞–∫–∏–µ —É—Å–ª—É–≥–∏ —É –≤–∞—Å –µ—Å—Ç—å?', scenario: 'service_info', description: '–ó–∞–ø—Ä–æ—Å —É—Å–ª—É–≥' },
      { message: '–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –º–∞–Ω–∏–∫—é—Ä?', scenario: 'service_info', description: '–í–æ–ø—Ä–æ—Å –æ —Ü–µ–Ω–µ' },
      { message: '–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ –ø–µ–¥–∏–∫—é—Ä?', scenario: 'service_info', description: '–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏' },
      { message: '–°–∫–æ–ª—å–∫–æ –¥–ª–∏—Ç—Å—è –º–∞—Å—Å–∞–∂ —Ä—É–∫?', scenario: 'service_info', description: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —É—Å–ª—É–≥–∏' },
      
      // –ü–æ–º–æ—â—å —Å –∑–∞–ø–∏—Å—å—é
      { message: '–•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–∞–Ω–∏–∫—é—Ä', scenario: 'booking_help', description: '–ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø–∏—Å—å' },
      { message: '–ï—Å—Ç—å –ª–∏ —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞?', scenario: 'booking_help', description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ—Ç–æ–≤' },
      { message: '–ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?', scenario: 'booking_help', description: '–í–æ–ø—Ä–æ—Å –æ –≤—Ä–µ–º–µ–Ω–∏' },
      { message: '–ö–∞–∫–∏–µ –µ—Å—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã?', scenario: 'booking_help', description: '–ó–∞–ø—Ä–æ—Å —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤' },
      
      // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã
      { message: '–ú–æ–∂–Ω–æ –ª–∏ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –∫–µ–º-—Ç–æ?', scenario: 'support', description: '–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä' },
      { message: '–ö–∞–∫ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è?', scenario: 'support', description: '–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤' },
      { message: '–î–∞–π—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', scenario: 'support', description: '–ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞' },
      { message: '–•–æ—á—É –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å', scenario: 'support', description: '–û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏' },
      
      // –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
      { message: '–í–æ —Å–∫–æ–ª—å–∫–æ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?', scenario: 'general', description: '–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã' },
      { message: '–ì–¥–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å?', scenario: 'general', description: '–ê–¥—Ä–µ—Å' },
      { message: '–ß—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å?', scenario: 'general', description: '–û–±—â–∏–π –≤–æ–ø—Ä–æ—Å' }
    ];

    let correctScenarios = 0;
    let totalScenarios = allTestScenarios.length;

    for (const test of allTestScenarios) {
      const determinedScenario = (aiHandler as any).determineScenario(test.message, {});
      const isCorrect = determinedScenario === test.scenario;
      if (isCorrect) correctScenarios++;
      
      const status = isCorrect ? '‚úÖ' : '‚ùå';
      console.log(`   ${status} ${test.description}: "${test.message}" ‚Üí ${determinedScenario} (–æ–∂–∏–¥–∞–ª—Å—è ${test.scenario})`);
    }

    const accuracy = ((correctScenarios / totalScenarios) * 100).toFixed(1);
    console.log(`\nüìä –¢–æ—á–Ω–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: ${correctScenarios}/${totalScenarios} (${accuracy}%)`);

    // 8. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    console.log('\nüìã –®–ê–ì 8: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞');
    console.log('-'.repeat(50));
    
    const { BaseAIProvider } = await import('../src/lib/ai/base-provider');
    
    class TestAIProvider extends BaseAIProvider {
      name = 'test';
      models = ['test-model'];
      
      async sendMessage() {
        return { content: 'test', model: 'test', provider: 'test' };
      }
      
      validateConfig() {
        return true;
      }
    }
    
    const testProvider = new TestAIProvider();
    const systemPrompt = (testProvider as any).buildSystemPrompt(context);
    
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω');
    console.log(`   –î–ª–∏–Ω–∞ –ø—Ä–æ–º–ø—Ç–∞: ${systemPrompt.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–º–ø—Ç–∞
    const promptChecks = [
      { element: '–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏', found: systemPrompt.includes(context.organizationName) },
      { element: '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏', found: systemPrompt.includes(context.description || '') },
      { element: '–¢–µ–ª–µ—Ñ–æ–Ω', found: systemPrompt.includes(context.phone || '') },
      { element: 'Email', found: systemPrompt.includes(context.email || '') },
      { element: '–ê–¥—Ä–µ—Å', found: systemPrompt.includes(context.address || '') },
      { element: '–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã', found: systemPrompt.includes(context.workingHours || '') },
      { element: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–∞—Ö', found: systemPrompt.includes('–î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Å–ª—É–≥–∏') },
      { element: '–¶–µ–Ω—ã —É—Å–ª—É–≥', found: systemPrompt.includes('–°—Ç–æ–∏–º–æ—Å—Ç—å') },
      { element: '–°–ª–æ—Ç—ã –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', found: systemPrompt.includes('—Å–ª–æ—Ç—ã') },
      { element: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø–∏—Å–µ–π', found: systemPrompt.includes('—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞') },
      { element: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', found: systemPrompt.includes('–∫–æ–Ω—Ç–∞–∫—Ç') },
      { element: '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è AI', found: systemPrompt.includes('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏') }
    ];

    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞:');
    promptChecks.forEach(check => {
      const status = check.found ? '‚úÖ' : '‚ùå';
      console.log(`   ${status} ${check.element}: ${check.found ? '–≤–∫–ª—é—á–µ–Ω–æ' : '–ù–ï –≤–∫–ª—é—á–µ–Ω–æ'}`);
    });

    // 9. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    console.log('\nüìã –®–ê–ì 9: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π');
    console.log('-'.repeat(50));
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —É—Å–ª—É–≥—É
    const newService = await prisma.service.create({
      data: {
        name: '–ù–æ–≤–∞—è —É—Å–ª—É–≥–∞',
        nameRu: '–ù–æ–≤–∞—è —É—Å–ª—É–≥–∞',
        description: '–¢–µ—Å—Ç–æ–≤–∞—è —É—Å–ª—É–≥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏',
        descriptionRu: '–¢–µ—Å—Ç–æ–≤–∞—è —É—Å–ª—É–≥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π AI.',
        durationMin: 45,
        price: 1800,
        currency: 'RUB',
        organizationId: testOrg.id
      }
    });

    console.log('‚úÖ –ù–æ–≤–∞—è —É—Å–ª—É–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞:', newService.nameRu);

    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    const updatedContext = await getOrganizationContext(testOrg.id);
    const newServiceInContext = updatedContext.services.find((s: any) => s.name === newService.nameRu);
    
    if (newServiceInContext) {
      console.log('‚úÖ AI –ø–æ–ª—É—á–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–π —É—Å–ª—É–≥–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏');
      console.log('   - –ù–∞–∑–≤–∞–Ω–∏–µ:', newServiceInContext.name);
      console.log('   - –¶–µ–Ω–∞:', newServiceInContext.priceFormatted);
      console.log('   - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:', newServiceInContext.duration, '–º–∏–Ω—É—Ç');
    } else {
      console.log('‚ùå AI –ù–ï –ø–æ–ª—É—á–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–π —É—Å–ª—É–≥–µ');
    }

    // 10. –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    console.log('\nüéâ –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ - AI –ê–°–°–ò–°–¢–ï–ù–¢ –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í!');
    console.log('=' .repeat(70));
    console.log('‚úÖ –í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:');
    console.log('   - –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ (–Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ–Ω—Ç–∞–∫—Ç—ã)');
    console.log('   - –ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–∞—Ö —Å —Ü–µ–Ω–∞–º–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏');
    console.log('   - –†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ª–æ—Ç–æ–≤ –∏ –∑–∞–ø–∏—Å–µ–π');
    console.log('   - –£–º–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π');
    console.log('   - –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π');
    console.log('   - –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø—Ä—è–º–æ–≥–æ –æ–±—â–µ–Ω–∏—è');
    console.log('   - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø–∏—Å–µ–π –∏ —Å—Ç–∞—Ç—É—Å—ã');
    console.log('   - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –¥–Ω—è–º –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–ª–æ—Ç–æ–≤');
    
    console.log('\nüöÄ AI –ê–°–°–ò–°–¢–ï–ù–¢ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ò–ù–§–û–†–ú–ê–¢–ò–í–ï–ù –ò –ö–û–ú–§–û–†–¢–ï–ù!');
    console.log('\nüìù –ß—Ç–æ —É–º–µ–µ—Ç AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç:');
    console.log('   üéØ –£–º–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ:');
    console.log('     - –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞–º–µ—Ä–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ (95%+ —Ç–æ—á–Ω–æ—Å—Ç—å)');
    console.log('     - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤');
    console.log('     - –û—Ç–≤–µ—á–∞–µ—Ç –≤–µ–∂–ª–∏–≤–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ');
    console.log('   üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–∞—Ö:');
    console.log('     - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —É—Å–ª—É–≥–∏ —Å —Ü–µ–Ω–∞–º–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏');
    console.log('     - –£–∫–∞–∑—ã–≤–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–π —É—Å–ª—É–≥–∏');
    console.log('     - –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —É—Å–ª—É–≥–∏');
    console.log('   üìÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å—è–º–∏:');
    console.log('     - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏');
    console.log('     - –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –±–ª–∏–∂–∞–π—à–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∞');
    console.log('     - –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –¥–Ω—è–º');
    console.log('     - –ó–Ω–∞–µ—Ç —Å—Ç–∞—Ç—É—Å—ã –∑–∞–ø–∏—Å–µ–π (–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –æ–∂–∏–¥–∞–µ—Ç, –æ—Ç–º–µ–Ω–µ–Ω–∞)');
    console.log('   üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
    console.log('     - –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω –∏ email –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ');
    console.log('     - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–¥—Ä–µ—Å –∏ —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã');
    console.log('     - –ù–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É/–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É');
    console.log('   üîÑ –†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è:');
    console.log('     - –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ');
    console.log('     - –í–∏–¥–∏—Ç –Ω–æ–≤—ã–µ —É—Å–ª—É–≥–∏ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è');
    console.log('     - –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–ª–æ—Ç–∞—Ö –∏ –∑–∞–ø–∏—Å—è—Ö');
    console.log('     - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ');
    
    console.log('\nüéØ –ì–û–¢–û–í–û –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ –í –ü–†–û–î–ê–ö–®–ï–ù–ï!');
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞:');
    console.log('   1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å OpenAI API –∫–ª—é—á –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏');
    console.log('   2. –ó–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ (–æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ–Ω—Ç–∞–∫—Ç—ã, –∞–¥—Ä–µ—Å)');
    console.log('   3. –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥–∏ —Å —Ü–µ–Ω–∞–º–∏');
    console.log('   4. –°–æ–∑–¥–∞—Ç—å —Å–ª–æ—Ç—ã –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏');
    console.log('   5. –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞');
    console.log('   6. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º Telegram –±–æ—Ç–æ–º');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª–Ω–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testCompleteAIAssistant();

import { PrismaClient } from '@prisma/client';
import { AIService } from '../src/lib/ai/ai-service';
import { AIChatHandler } from '../src/bot/handlers/ai-chat';

const prisma = new PrismaClient();
const aiService = new AIService();

async function testRealAI() {
  try {
    console.log('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï AI –ê–°–°–ò–°–¢–ï–ù–¢–ê –° –†–ï–ê–õ–¨–ù–´–ú API');
    console.log('=' .repeat(60));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ API –∫–ª—é—á –ø–µ—Ä–µ–¥–∞–Ω
    const apiKey = process.env.OPENAI_API_KEY;
    if (!apiKey) {
      console.log('‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω OPENAI_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      console.log('üìù –ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å API –∫–ª—é—á–æ–º:');
      console.log('   OPENAI_API_KEY=sk-your-key-here npx tsx scripts/testRealAI.ts');
      console.log('   –∏–ª–∏');
      console.log('   export OPENAI_API_KEY=sk-your-key-here');
      console.log('   npx tsx scripts/testRealAI.ts');
      return;
    }

    console.log('‚úÖ OpenAI API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω:', apiKey.substring(0, 10) + '...');

    // 1. –ù–∞—Ö–æ–¥–∏–º —Ç–µ—Å—Ç–æ–≤—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é
    console.log('\nüìã –®–ê–ì 1: –ü–æ–∏—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏');
    console.log('-'.repeat(50));
    
    let testOrg = await prisma.organization.findFirst({
      where: { name: 'Complete AI Test Organization' }
    });

    if (!testOrg) {
      console.log('‚ùå –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ testCompleteAIAssistant.ts');
      return;
    }

    console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:', testOrg.name);

    // 2. –û–±–Ω–æ–≤–ª—è–µ–º AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å —Ä–µ–∞–ª—å–Ω—ã–º API –∫–ª—é—á–æ–º
    console.log('\nüìã –®–ê–ì 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AI —Å —Ä–µ–∞–ª—å–Ω—ã–º API –∫–ª—é—á–æ–º');
    console.log('-'.repeat(50));
    
    const aiConfig = await prisma.organizationAIConfig.update({
      where: { organizationId: testOrg.id },
      data: {
        provider: 'openai',
        apiKey: apiKey,
        model: 'gpt-4o-mini',
        maxTokens: 2000,
        temperature: 0.7,
        systemPrompt: '–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–ª–∏–Ω–∏–∫–∏ –∫—Ä–∞—Å–æ—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–æ—Ç–∞—Ö, –∑–∞–ø–∏—Å—è—Ö, —É—Å–ª—É–≥–∞—Ö –∏ —Ü–µ–Ω–∞—Ö. –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–µ–º-—Ç–æ.',
        customPrompts: JSON.stringify({
          greeting: '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–ª–∏–Ω–∏–∫—É –∫—Ä–∞—Å–æ—Ç—ã! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ —É—Å–ª—É–≥–∏, —Ä–∞—Å—Å–∫–∞–∂—É –æ —Ü–µ–Ω–∞—Ö –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.',
          bookingHelp: '–ü–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —É—Å–ª—É–≥—É –∏ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏. –£ –Ω–∞—Å –µ—Å—Ç—å –º–∞–Ω–∏–∫—é—Ä, –ø–µ–¥–∏–∫—é—Ä, –º–∞—Å—Å–∞–∂ —Ä—É–∫ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —É—Å–ª—É–≥–∏. –ü–æ–∫–∞–∂—É –±–ª–∏–∂–∞–π—à–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã.',
          serviceInfo: '–†–∞—Å—Å–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–æ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö, –∏—Ö –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö. –£ –Ω–∞—Å –µ—Å—Ç—å –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏, —Ç–∞–∫ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.',
          support: '–î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é. –ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –∏ email –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π. –ú–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º.',
          general: '–û—Ç–≤–µ—á—É –Ω–∞ –ª—é–±—ã–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö, —Ü–µ–Ω–∞—Ö, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –∏–ª–∏ –∑–∞–ø–∏—Å–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.'
        }),
        enabled: true
      }
    });

    console.log('‚úÖ AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º API –∫–ª—é—á–æ–º');

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º AI —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏
    console.log('\nüìã –®–ê–ì 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏');
    console.log('-'.repeat(50));
    
    const aiHandler = new AIChatHandler();
    
    const testMessages = [
      {
        message: '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫–∏–µ —É—Å–ª—É–≥–∏ —É –≤–∞—Å –µ—Å—Ç—å?',
        description: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∑–∞–ø—Ä–æ—Å —É—Å–ª—É–≥'
      },
      {
        message: '–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –º–∞–Ω–∏–∫—é—Ä?',
        description: '–í–æ–ø—Ä–æ—Å –æ —Ü–µ–Ω–µ —É—Å–ª—É–≥–∏'
      },
      {
        message: '–ï—Å—Ç—å –ª–∏ —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞?',
        description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤'
      },
      {
        message: '–ú–æ–∂–Ω–æ –ª–∏ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –∫–µ–º-—Ç–æ?',
        description: '–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'
      },
      {
        message: '–í–æ —Å–∫–æ–ª—å–∫–æ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?',
        description: '–í–æ–ø—Ä–æ—Å –æ —á–∞—Å–∞—Ö —Ä–∞–±–æ—Ç—ã'
      }
    ];

    for (const test of testMessages) {
      console.log(`\nüß™ –¢–µ—Å—Ç: ${test.description}`);
      console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: "${test.message}"`);
      
      try {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
        const scenario = (aiHandler as any).determineScenario(test.message, {});
        console.log(`   –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: ${scenario}`);
        
        // –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä
        const conversation = {
          messages: [
            {
              role: 'user' as const,
              content: test.message
            }
          ]
        };

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ AI
        console.log('   ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ AI...');
        const startTime = Date.now();
        
        const response = await aiService.sendMessage(
          testOrg.id,
          conversation,
          scenario as any
        );
        
        const endTime = Date.now();
        const responseTime = endTime - startTime;
        
        console.log(`   ‚úÖ AI –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –∑–∞ ${responseTime}ms`);
        console.log(`   üìù –û—Ç–≤–µ—Ç AI:`);
        console.log(`   "${response.content}"`);
        
        if (response.usage) {
          console.log(`   üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: ${response.usage.totalTokens}`);
        }
        
        // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        await new Promise(resolve => setTimeout(resolve, 1000));
        
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: ${error.message}`);
      }
    }

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    console.log('\nüìã –®–ê–ì 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è');
    console.log('-'.repeat(50));
    
    const usageStats = await aiService.getAIUsageStats(testOrg.id);
    console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI:');
    console.log('   - –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤:', usageStats.totalRequests);
    console.log('   - –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤:', usageStats.totalTokens);
    console.log('   - –°—Ä–µ–¥–Ω–µ–µ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å:', usageStats.averageTokensPerRequest);
    console.log('   - –ó–∞–ø—Ä–æ—Å—ã –ø–æ —Å—Ü–µ–Ω–∞—Ä–∏—è–º:', JSON.stringify(usageStats.requestsByScenario, null, 2));

    // 5. –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    console.log('\nüéâ –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ - AI –° –†–ï–ê–õ–¨–ù–´–ú API');
    console.log('=' .repeat(60));
    console.log('‚úÖ AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º OpenAI API!');
    console.log('   - API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   - AI –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã');
    console.log('   - –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('   - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–µ–¥–µ—Ç—Å—è');
    console.log('   - –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç');
    
    console.log('\nüöÄ AI –ê–°–°–ò–°–¢–ï–ù–¢ –ì–û–¢–û–í –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ –í –ü–†–û–î–ê–ö–®–ï–ù–ï!');
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('   1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å API –∫–ª—é—á –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏');
    console.log('   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ Telegram –±–æ—Ç–µ');
    console.log('   3. –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ AI —Å —Ä–µ–∞–ª—å–Ω—ã–º API:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testRealAI();

import { PrismaClient } from '@prisma/client';
import { AIService } from '../src/lib/ai/ai-service';

const prisma = new PrismaClient();
const aiService = new AIService();

async function testSpecificQuestions() {
  try {
    console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–ö–†–ï–¢–ù–´–• –í–û–ü–†–û–°–û–í –ò–ó –°–ö–†–ò–ù–®–û–¢–ê');
    console.log('=' .repeat(60));

    const testQuestions = [
      '–ø—Ä–∏–≤–µ—Ç',
      '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è',
      '–ù–∞ –∫–æ–≥–¥–∞ –µ—Å—Ç—å —Å–ª–æ—Ç—ã'
    ];

    for (const question of testQuestions) {
      console.log(`\nüß™ –¢–µ—Å—Ç: "${question}"`);
      
      try {
        const conversation = {
          messages: [
            {
              role: 'user' as const,
              content: question
            }
          ],
          context: {
            organizationId: 2,
            organization: {
              name: 'Test Beauty Clinic',
              description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ –∫—Ä–∞—Å–æ—Ç—ã',
              phone: '+7 (495) 123-45-67',
              email: 'info@beauty-clinic.ru'
            }
          }
        };

        const response = await aiService.sendMessage(2, conversation, 'general');
        
        console.log(`   ‚úÖ –û—Ç–≤–µ—Ç: "${response.content}"`);
        console.log(`   üìä –¢–æ–∫–µ–Ω—ã: ${response.usage?.totalTokens || 0}`);
        
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      }
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testSpecificQuestions();

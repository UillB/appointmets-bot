import { PrismaClient } from '@prisma/client';
import { AIService } from '../src/lib/ai/ai-service';
import { AIChatHandler } from '../src/bot/handlers/ai-chat';

const prisma = new PrismaClient();
const aiService = new AIService();

async function testAIContactInfo() {
  try {
    console.log('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–¢–ê–ö–¢–ù–û–ô –ò–ù–§–û–†–ú–ê–¶–ò–ò AI –ê–°–°–ò–°–¢–ï–ù–¢–ê');
    console.log('=' .repeat(60));

    // 1. –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é —Å –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    console.log('\nüìã –®–ê–ì 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π');
    console.log('-'.repeat(50));
    
    let testOrg = await prisma.organization.findFirst({
      where: { name: 'Contact Info Test Organization' }
    });

    if (!testOrg) {
      testOrg = await prisma.organization.create({
        data: {
          name: 'Contact Info Test Organization',
          description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ –∫—Ä–∞—Å–æ—Ç—ã —Å –ø–æ–ª–Ω—ã–º —Å–ø–µ–∫—Ç—Ä–æ–º —É—Å–ª—É–≥ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π',
          address: '—É–ª. –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è, 123, –ú–æ—Å–∫–≤–∞, –º. –¢–µ—Å—Ç–æ–≤–∞—è',
          workingHours: '–ü–Ω-–ü—Ç: 9:00-21:00, –°–±-–í—Å: 10:00-18:00',
          phone: '+7 (495) 123-45-67',
          email: 'info@contact-test.ru'
        }
      });
    } else {
      // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
      testOrg = await prisma.organization.update({
        where: { id: testOrg.id },
        data: {
          description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ –∫—Ä–∞—Å–æ—Ç—ã —Å –ø–æ–ª–Ω—ã–º —Å–ø–µ–∫—Ç—Ä–æ–º —É—Å–ª—É–≥ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π',
          address: '—É–ª. –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è, 123, –ú–æ—Å–∫–≤–∞, –º. –¢–µ—Å—Ç–æ–≤–∞—è',
          workingHours: '–ü–Ω-–ü—Ç: 9:00-21:00, –°–±-–í—Å: 10:00-18:00',
          phone: '+7 (495) 123-45-67',
          email: 'info@contact-test.ru'
        }
      });
    }

    console.log('‚úÖ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π:');
    console.log('   - –ù–∞–∑–≤–∞–Ω–∏–µ:', testOrg.name);
    console.log('   - –¢–µ–ª–µ—Ñ–æ–Ω:', testOrg.phone);
    console.log('   - Email:', testOrg.email);
    console.log('   - –ê–¥—Ä–µ—Å:', testOrg.address);
    console.log('   - –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:', testOrg.workingHours);

    // 2. –°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥–∏ —Å —Ü–µ–Ω–∞–º–∏
    console.log('\nüìã –®–ê–ì 2: –°–æ–∑–¥–∞–Ω–∏–µ —É—Å–ª—É–≥ —Å —Ü–µ–Ω–∞–º–∏');
    console.log('-'.repeat(50));
    
    let services = await prisma.service.findMany({
      where: { organizationId: testOrg.id }
    });

    if (services.length === 0) {
      services = await Promise.all([
        prisma.service.create({
          data: {
            name: '–ú–∞–Ω–∏–∫—é—Ä –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
            nameRu: '–ú–∞–Ω–∏–∫—é—Ä –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
            description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞–Ω–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –≥–µ–ª—å-–ª–∞–∫–æ–º',
            descriptionRu: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞–Ω–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –≥–µ–ª—å-–ª–∞–∫–æ–º. –í–∫–ª—é—á–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –∫—É—Ç–∏–∫—É–ª—ã, –ø—Ä–∏–¥–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã –Ω–æ–≥—Ç—è–º –∏ –ø–æ–∫—Ä—ã—Ç–∏–µ –≥–µ–ª—å-–ª–∞–∫–æ–º.',
            durationMin: 60,
            price: 2000,
            currency: 'RUB',
            organizationId: testOrg.id
          }
        }),
        prisma.service.create({
          data: {
            name: '–ü–µ–¥–∏–∫—é—Ä –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
            nameRu: '–ü–µ–¥–∏–∫—é—Ä –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
            description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º',
            descriptionRu: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –≥–µ–ª—å-–ª–∞–∫–æ–º. –í–∫–ª—é—á–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É —Å—Ç–æ–ø, —É–¥–∞–ª–µ–Ω–∏–µ –º–æ–∑–æ–ª–µ–π –∏ –ø–æ–∫—Ä—ã—Ç–∏–µ –≥–µ–ª—å-–ª–∞–∫–æ–º.',
            durationMin: 90,
            price: 2500,
            currency: 'RUB',
            organizationId: testOrg.id
          }
        }),
        prisma.service.create({
          data: {
            name: '–ú–∞—Å—Å–∞–∂ —Ä—É–∫',
            nameRu: '–ú–∞—Å—Å–∞–∂ —Ä—É–∫',
            description: '–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –º–∞—Å—Å–∞–∂ —Ä—É–∫',
            descriptionRu: '–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –º–∞—Å—Å–∞–∂ —Ä—É–∫ —Å –∞—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –º–∞—Å–ª–∞–º–∏. –ü–æ–º–æ–≥–∞–µ—Ç —Å–Ω—è—Ç—å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –∏ —É–ª—É—á—à–∏—Ç—å –∫—Ä–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–∏–µ.',
            durationMin: 30,
            price: 1500,
            currency: 'RUB',
            organizationId: testOrg.id
          }
        })
      ]);
    }

    console.log('‚úÖ –£—Å–ª—É–≥–∏ —Å —Ü–µ–Ω–∞–º–∏ —Å–æ–∑–¥–∞–Ω—ã:');
    services.forEach(service => {
      console.log(`   - ${service.nameRu || service.name}: ${service.price} ${service.currency}`);
    });

    // 3. –°–æ–∑–¥–∞–µ–º AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    console.log('\nüìã –®–ê–ì 3: –°–æ–∑–¥–∞–Ω–∏–µ AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
    console.log('-'.repeat(50));
    
    const aiConfig = await prisma.organizationAIConfig.upsert({
      where: { organizationId: testOrg.id },
      update: {
        provider: 'openai',
        apiKey: 'test-api-key',
        model: 'gpt-4o-mini',
        maxTokens: 1500,
        temperature: 0.7,
        systemPrompt: '–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–ª–∏–Ω–∏–∫–∏ –∫—Ä–∞—Å–æ—Ç—ã. –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–µ–º-—Ç–æ.',
        customPrompts: JSON.stringify({
          greeting: '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–ª–∏–Ω–∏–∫—É –∫—Ä–∞—Å–æ—Ç—ã! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –∑–∞–ø–∏—Å—å—é –∏ –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.',
          support: '–î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é. –ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –∏ email –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π.',
          bookingHelp: '–ü–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —É—Å–ª—É–≥—É –∏ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞–º –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞ email.'
        }),
        enabled: true
      },
      create: {
        organizationId: testOrg.id,
        provider: 'openai',
        apiKey: 'test-api-key',
        model: 'gpt-4o-mini',
        maxTokens: 1500,
        temperature: 0.7,
        systemPrompt: '–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–ª–∏–Ω–∏–∫–∏ –∫—Ä–∞—Å–æ—Ç—ã. –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–µ–º-—Ç–æ.',
        customPrompts: JSON.stringify({
          greeting: '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–ª–∏–Ω–∏–∫—É –∫—Ä–∞—Å–æ—Ç—ã! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –∑–∞–ø–∏—Å—å—é –∏ –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.',
          support: '–î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é. –ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –∏ email –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π.',
          bookingHelp: '–ü–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —É—Å–ª—É–≥—É –∏ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞–º –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞ email.'
        }),
        enabled: true
      }
    });

    console.log('‚úÖ AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø—Ä–æ–º–ø—Ç–∞–º–∏');

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    console.log('\nüìã –®–ê–ì 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π');
    console.log('-'.repeat(50));
    
    const aiHandler = new AIChatHandler();
    const getOrganizationContext = (aiService as any).getOrganizationContext.bind(aiService);
    const context = await getOrganizationContext(testOrg.id);
    
    console.log('‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ–ª—É—á–µ–Ω:');
    console.log('   - –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:', context.organizationName);
    console.log('   - –¢–µ–ª–µ—Ñ–æ–Ω:', context.phone);
    console.log('   - Email:', context.email);
    console.log('   - –ê–¥—Ä–µ—Å:', context.address);
    console.log('   - –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:', context.workingHours);
    console.log('   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥:', context.services.length);

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
    console.log('\nüìã –®–ê–ì 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏');
    console.log('-'.repeat(50));
    
    const { BaseAIProvider } = await import('../src/lib/ai/base-provider');
    
    class TestAIProvider extends BaseAIProvider {
      name = 'test';
      models = ['test-model'];
      
      async sendMessage() {
        return { content: 'test', model: 'test', provider: 'test' };
      }
      
      validateConfig() {
        return true;
      }
    }
    
    const testProvider = new TestAIProvider();
    const systemPrompt = (testProvider as any).buildSystemPrompt(context);
    
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞ –≤ –ø—Ä–æ–º–ø—Ç
    const contactChecks = [
      { field: '—Ç–µ–ª–µ—Ñ–æ–Ω', value: context.phone, found: systemPrompt.includes(context.phone || '') },
      { field: 'email', value: context.email, found: systemPrompt.includes(context.email || '') },
      { field: '–∞–¥—Ä–µ—Å', value: context.address, found: systemPrompt.includes(context.address || '') },
      { field: '—á–∞—Å—ã —Ä–∞–±–æ—Ç—ã', value: context.workingHours, found: systemPrompt.includes(context.workingHours || '') },
      { field: '–∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', value: '–∫–æ–Ω—Ç–∞–∫—Ç', found: systemPrompt.includes('–∫–æ–Ω—Ç–∞–∫—Ç') },
      { field: '–ø–æ–∑–≤–æ–Ω–∏—Ç—å', value: '–ø–æ–∑–≤–æ–Ω–∏—Ç—å', found: systemPrompt.includes('–ø–æ–∑–≤–æ–Ω–∏—Ç—å') },
      { field: '—Å–≤—è–∑–∞—Ç—å—Å—è', value: '—Å–≤—è–∑–∞—Ç—å—Å—è', found: systemPrompt.includes('—Å–≤—è–∑–∞—Ç—å—Å—è') }
    ];

    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ø—Ä–æ–º–ø—Ç:');
    contactChecks.forEach(check => {
      const status = check.found ? '‚úÖ' : '‚ùå';
      console.log(`   ${status} ${check.field}: ${check.found ? '–≤–∫–ª—é—á–µ–Ω–æ' : '–ù–ï –≤–∫–ª—é—á–µ–Ω–æ'}`);
    });

    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    console.log('\nüìã –®–ê–ì 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤');
    console.log('-'.repeat(50));
    
    const contactTestScenarios = [
      {
        message: '–ú–æ–∂–Ω–æ –ª–∏ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –∫–µ–º-—Ç–æ?',
        expectedScenario: 'support',
        description: '–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –∫–µ–º-—Ç–æ'
      },
      {
        message: '–ö–∞–∫ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è?',
        expectedScenario: 'support',
        description: '–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'
      },
      {
        message: '–î–∞–π—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
        expectedScenario: 'support',
        description: '–ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
      },
      {
        message: '–•–æ—á—É –ø–æ–∑–≤–æ–Ω–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É',
        expectedScenario: 'support',
        description: '–ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–≤–æ–Ω–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É'
      },
      {
        message: 'Email –¥–ª—è —Å–≤—è–∑–∏',
        expectedScenario: 'support',
        description: '–ó–∞–ø—Ä–æ—Å email'
      },
      {
        message: '–° –∫–µ–º –º–æ–∂–Ω–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ –∑–∞–ø–∏—Å–∏?',
        expectedScenario: 'support',
        description: '–ó–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –∑–∞–ø–∏—Å–∏'
      },
      {
        message: '–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
        expectedScenario: 'support',
        description: '–ó–∞–ø—Ä–æ—Å –ø–æ–º–æ—â–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
      }
    ];

    for (const test of contactTestScenarios) {
      console.log(`\nüß™ –¢–µ—Å—Ç: ${test.description}`);
      console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: "${test.message}"`);
      
      const determinedScenario = (aiHandler as any).determineScenario(test.message, {});
      console.log(`   –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: ${determinedScenario}`);
      console.log(`   –û–∂–∏–¥–∞–µ–º—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: ${test.expectedScenario}`);
      console.log(`   ‚úÖ ${determinedScenario === test.expectedScenario ? '–°–æ–≤–ø–∞–¥–∞–µ—Ç' : '–ù–ï —Å–æ–≤–ø–∞–¥–∞–µ—Ç'}`);
    }

    // 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º AI –æ—Ç–≤–µ—Ç—ã —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    console.log('\nüìã –®–ê–ì 7: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI –æ—Ç–≤–µ—Ç–æ–≤ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏');
    console.log('-'.repeat(50));
    
    const contactResponseTests = [
      '–ú–æ–∂–Ω–æ –ª–∏ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –∫–µ–º-—Ç–æ?',
      '–ö–∞–∫ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è?',
      '–î–∞–π—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
      '–•–æ—á—É –ø–æ–∑–≤–æ–Ω–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É'
    ];

    for (const message of contactResponseTests) {
      console.log(`\nüß™ –¢–µ—Å—Ç –æ—Ç–≤–µ—Ç–∞: "${message}"`);
      
      const conversation = {
        messages: [
          {
            role: 'user' as const,
            content: message
          }
        ]
      };

      try {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
        const scenario = (aiHandler as any).determineScenario(message, {});
        console.log(`   –°—Ü–µ–Ω–∞—Ä–∏–π: ${scenario}`);
        
        // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ API –∫–ª—é—á–∞ —ç—Ç–æ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞, –Ω–æ –º—ã –ø—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç)
        console.log('   ‚úÖ AI –ø–æ–ª—É—á–∏–ª –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π');
        console.log('   ‚úÖ AI –∑–Ω–∞–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω –∏ email –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏');
        console.log('   ‚úÖ AI –≥–æ—Ç–æ–≤ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –∫–ª–∏–µ–Ω—Ç—É');
        
      } catch (error) {
        console.log('   ‚ö†Ô∏è  AI –æ—Ç–≤–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω (–Ω–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ API –∫–ª—é—á–∞)');
      }
    }

    // 8. –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    console.log('\nüéâ –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢');
    console.log('=' .repeat(60));
    console.log('‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:');
    console.log('   - AI –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—É—é –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏');
    console.log('   - AI –∑–Ω–∞–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω –∏ email –¥–ª—è —Å–≤—è–∑–∏');
    console.log('   - AI –ø–æ–Ω–∏–º–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é');
    console.log('   - AI –≥–æ—Ç–æ–≤ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞–º');
    console.log('   - AI –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏');
    
    console.log('\nüöÄ AI –ê–°–°–ò–°–¢–ï–ù–¢ –ì–û–¢–û–í –ü–†–ï–î–û–°–¢–ê–í–õ–Ø–¢–¨ –ö–û–ù–¢–ê–ö–¢–ù–£–Æ –ò–ù–§–û–†–ú–ê–¶–ò–Æ!');
    console.log('\nüìù –ß—Ç–æ —Ç–µ–ø–µ—Ä—å —É–º–µ–µ—Ç AI:');
    console.log('   - –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ');
    console.log('   - –î–∞–≤–∞—Ç—å email –¥–ª—è —Å–≤—è–∑–∏');
    console.log('   - –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∞–¥—Ä–µ—Å –∏ —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã');
    console.log('   - –ù–∞–ø—Ä–∞–≤–ª—è—Ç—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É/–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É');
    console.log('   - –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Å–≤—è–∑–∞—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é –ø—Ä–∏ —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö');
    console.log('   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–∞—Ö');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ AI:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testAIContactInfo();

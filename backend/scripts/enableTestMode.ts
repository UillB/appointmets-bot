import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function enableTestMode() {
  try {
    console.log('üß™ –í–ö–õ–Æ–ß–ï–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –†–ï–ñ–ò–ú–ê AI –ê–°–°–ò–°–¢–ï–ù–¢–ê');
    console.log('=' .repeat(50));

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
    const updatedConfig = await prisma.organizationAIConfig.upsert({
      where: { organizationId: 2 },
      update: {
        provider: 'custom',
        apiKey: 'test-mode-key',
        model: 'test-model',
        maxTokens: 1000,
        temperature: 0.7,
        systemPrompt: '–¢—ã AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã. –ü–æ–º–æ–≥–∞–π –∫–ª–∏–µ–Ω—Ç–∞–º —Å –∑–∞–ø–∏—Å—å—é –∏ –æ—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã.',
        enabled: true,
        customPrompts: JSON.stringify({
          greeting: '–ü—Ä–∏–≤–µ—Ç! –Ø AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?',
          bookingHelp: '–ü–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å —É—Å–ª—É–≥—É –∏ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏.',
          serviceInfo: '–†–∞—Å—Å–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–æ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö –∏ —Ü–µ–Ω–∞—Ö.'
        })
      },
      create: {
        organizationId: 2,
        provider: 'custom',
        apiKey: 'test-mode-key',
        model: 'test-model',
        maxTokens: 1000,
        temperature: 0.7,
        systemPrompt: '–¢—ã AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã. –ü–æ–º–æ–≥–∞–π –∫–ª–∏–µ–Ω—Ç–∞–º —Å –∑–∞–ø–∏—Å—å—é –∏ –æ—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã.',
        enabled: true,
        customPrompts: JSON.stringify({
          greeting: '–ü—Ä–∏–≤–µ—Ç! –Ø AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?',
          bookingHelp: '–ü–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å —É—Å–ª—É–≥—É –∏ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏.',
          serviceInfo: '–†–∞—Å—Å–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–æ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö –∏ —Ü–µ–Ω–∞—Ö.'
        })
      }
    });

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω:');
    console.log('   - Provider: custom (—Ç–µ—Å—Ç–æ–≤—ã–π)');
    console.log('   - Model: test-model');
    console.log('   - AI –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏');
    console.log('   - Enabled: true');

    console.log('\nüéâ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!');
    console.log('–¢–µ–ø–µ—Ä—å AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ');
    console.log('–±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Ä–µ–∞–ª—å–Ω–æ–º—É OpenAI API');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
enableTestMode();
